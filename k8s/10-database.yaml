apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: cl
  labels:
    name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      name: postgres
  template:
    metadata:
      name: postgres
      labels:
        name: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:17-alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: secret-credentials
                  key: database-admin-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-credentials
                  key: database-admin-password
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: "2"
              memory: 256Mi
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: postgres-db
            - name: init
              mountPath: /docker-entrypoint-initdb.d

      restartPolicy: Always
      volumes:
        - name: data
#          hostPath:
#            path: /tmp/k8s-data/postgres
#            type: DirectoryOrCreate
#          emptyDir:
#            sizeLimit: 1Gi
          persistentVolumeClaim:
            claimName: postgres-data
        - name: init
          configMap:
            name: postgres-db-init

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-db-init
  namespace: cl
data:
  # TODO find a way to use secret for password
  init-keycloak.sql: |
    CREATE USER "crowd-library" WITH PASSWORD 'crowd-library';
    CREATE DATABASE "crowd-library";
    GRANT ALL PRIVILEGES ON DATABASE "crowd-library" TO "crowd-library";
    ALTER DATABASE "crowd-library" OWNER TO "crowd-library";
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db
  namespace: cl
  labels:
    name: postgres-db
spec:
  selector:
    name: postgres-db
  ports:
    - port: 5432
      name: postgres
      targetPort: 5432
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  namespace: cl
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
